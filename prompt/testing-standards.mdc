---
description:
globs:
alwaysApply: true
---
# Testing Standards Guide

This guide outlines testing standards for both AWS CDK and Serverless projects.

## Mandatory Testing Policy

- **All code inside the `src` directory must have corresponding unit or integration tests before any task is considered complete.**
- **All tests must be run and pass at the end of each task before it is considered complete.**
- **Tests must be present in `src/**/__tests__/` directories and follow the naming convention `*.test.ts` or `*.spec.ts`.**
- **Ensure 80% of tested code**

## Test Organization

### AWS CDK Projects
Tests are organized in `__tests__` directories:
- Unit tests alongside source files
- Only code in `src/` must be covered by tests in `src/**/__tests__/`
- Example: @projects/aws-cdk/dispatch-backup/src/lambda/__tests__/

### Serverless Projects
Tests follow similar patterns but may be in `test/` directories:
- Unit tests in `test/` or `__tests__/`

## Testing Tools
1. AWS SDK Mock for AWS service mocking
2. TypeScript for type checking
3. ESLint for code quality

## Test File Naming
- Unit tests: `*.test.ts` or `*.spec.ts`

## Coverage Requirements
- Minimum 80% code coverage
- Run coverage checks: `npm run test:coverage`
- Coverage reports in `coverage/` directory

## Best Practices
1. Write tests before code (TDD)
2. Mock external services
3. Use meaningful test descriptions
4. Keep tests focused and atomic
5. Test error conditions
6. Use test fixtures for common setup

## Example Test Structure
```typescript
describe('MyService', () => {
  beforeEach(() => {
    // Setup
  });

  afterEach(() => {
    // Cleanup
  });

  describe('myMethod', () => {
    it('should handle successful case', () => {
      // Test
    });

    it('should handle error case', () => {
      // Test
    });
  });
});
```
